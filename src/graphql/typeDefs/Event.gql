enum EventStates {
  active
  finalized
  cancelled
  hidden
}
input CreateEventInput {
  name: String!
  location: String
  start: String
  end: String!
  description: String
  state: EventStates
}
input UpdateEventInput {
  name: String
  location: String
  start: String
  end: String
  description: String
  state: EventStates
}
type Event {
  _id: ID!
  name: String!
  location: String
  start: DateTime
  end: DateTime!
  description: String
  questions: [Question]!
  state: EventStates!
  updatedAt: DateTime!
  createdAt: DateTime!
}
type Query {
  getEvents: [Event]!
}
type Mutation {
  setEventState(eventId: ID!, state: EventStates!): Boolean!
  createEvent(input: CreateEventInput!): Event!
  updateEvent(eventId: ID!, input: UpdateEventInput!): Event!
  deleteEvent(eventId: ID!): Boolean!
}
